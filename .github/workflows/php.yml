name: CI

on: [push]

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate composer.json
        run: composer validate --strict
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

  snyk-to-sca:
    name: Snyk To SCA

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: php-actions/composer@v6

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/php@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  sonarqube-to-sast:
    name: SonarQube To SAST

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  zap-to-dast: 
    name: OWASP ZAP to DAST
    needs: build

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start web app
        run: |
          docker run -d --name myapp -p 8080:80 -v ${{ github.workspace }}:/var/www/html php:8.2-apache
          sleep 10  # 等待服務啟動

      - name: Install ZAP CLI
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip
          pip install python-owasp-zap-v2.4

      - name: Run Active Scan on POST endpoint
        run: |
          docker run -u zap -v $(pwd):/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:stable zap-cli \
            --zap-url http://localhost \
            --port 8080 \
            quick-scan \
            --self-contained \
            --active \
            --spider \
            --start-options '-config api.disablekey=true' \
            --post-data "username=test' OR '1'='1&password=123" \
            http://localhost:8080/
      
      - name: ZAP Full Scan Report
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: http://localhost:8080
          artifact_name: owasp-zap-report
          cmd_options: '-a'

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-full-report
          path: report_html.html


  test:
    name: Run Unit Tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: php-actions/composer@v6

      - name: Run phpunit
        run: vendor/bin/phpunit tests --log-events-text phpunit-results.txt
        continue-on-error: true

      - name: Upload TEST Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: phpunit-results.txt
